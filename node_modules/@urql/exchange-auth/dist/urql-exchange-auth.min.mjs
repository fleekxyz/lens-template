import{makeSubject as t,share as r,filter as n,map as e,merge as u,mergeMap as o,empty as a,fromValue as i,takeUntil as c,fromPromise as f,toPromise as h,take as p,onStart as l}from"wonka";import{makeOperation as d,createRequest as v}from"@urql/core";function k(){return(k=Object.assign||function(t){for(var r=1;r<arguments.length;r++){var n=arguments[r];for(var e in n)Object.prototype.hasOwnProperty.call(n,e)&&(t[e]=n[e])}return t}).apply(this,arguments)}function m(t,r){return d(t.kind,t,k({},t.context,{authAttempt:r}))}function s(d){var k=d.addAuthToOperation,s=d.getAuth,y=d.didAuthError,w=d.willAuthError;return function(d){var A=d.client,O=d.forward,S=new Map,x=t(),g=x.source,E=x.next,b=null;return function(t){function d(t,r,e){var u=A.createRequestOperation("mutation",v(t,r),e);return h(p(1)(n((function(t){return t.operation.key===u.key}))(l((function(){return E(u)}))(z))))}function x(t){b=t,j=void 0,S.forEach(E),S.clear()}var j=Promise.resolve().then((function(){return s({authState:b,mutate:d})})).then(x);function q(t){t=m(t,!0),S.set(t.key,t),j||(j=s({authState:b,mutate:d}).then(x).catch((function(){return x(null)})))}var P=r(t),M=n((function(t){return"teardown"===t.kind}))(P),R=n((function(t){return"teardown"!==t.kind}))(P),T=e((function(t){return k({operation:t,authState:b})}))(u([g,o((function(t){if(S.has(t.key))return a;if(!j&&w&&w({operation:t,authState:b}))return q(t),a;if(!j)return i(m(t,!1));var r=n((function(r){return"teardown"===r.kind&&r.key===t.key}))(P);return c(r)(e((function(){return m(t,!1)}))(f(j)))}))(R)])),z=r(O(u([T,M])));return n((function(t){var r=t.error,n=t.operation;return!(r&&y&&y({error:r,authState:b})&&!n.context.authAttempt&&(q(n),1))}))(z)}}}export{s as authExchange};
//# sourceMappingURL=urql-exchange-auth.min.mjs.map
