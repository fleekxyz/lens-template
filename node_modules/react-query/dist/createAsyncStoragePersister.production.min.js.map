{"version":3,"file":"createAsyncStoragePersister.production.min.js","sources":["../src/createAsyncStoragePersister/asyncThrottle.ts","../src/createAsyncStoragePersister/index.ts"],"sourcesContent":["export interface AsyncThrottleOptions {\n  interval?: number\n  onError?: (error: unknown) => void\n}\n\nconst noop = () => {\n  /* do nothing */\n}\n\nexport function asyncThrottle<Args extends readonly unknown[]>(\n  func: (...args: Args) => Promise<void>,\n  { interval = 1000, onError = noop }: AsyncThrottleOptions = {}\n) {\n  if (typeof func !== 'function') throw new Error('argument is not function.')\n\n  let running = false\n  let lastTime = 0\n  let timeout: ReturnType<typeof setTimeout>\n  let currentArgs: Args | null = null\n\n  const execFunc = async () => {\n    if (currentArgs) {\n      const args = currentArgs\n      currentArgs = null\n      try {\n        running = true\n        await func(...args)\n      } catch (error) {\n        onError(error)\n      } finally {\n        lastTime = Date.now() // this line must after 'func' executed to avoid two 'func' running in concurrent.\n        running = false\n      }\n    }\n  }\n\n  const delayFunc = async () => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      if (running) {\n        delayFunc() // Will come here when 'func' execution time is greater than the interval.\n      } else {\n        execFunc()\n      }\n    }, interval)\n  }\n\n  return (...args: Args) => {\n    currentArgs = args\n\n    const tooSoon = Date.now() - lastTime < interval\n    if (running || tooSoon) {\n      delayFunc()\n    } else {\n      execFunc()\n    }\n  }\n}\n","import { PersistedClient, Persister } from '../persistQueryClient'\nimport { asyncThrottle } from './asyncThrottle'\n\ninterface AsyncStorage {\n  getItem: (key: string) => Promise<string | null>\n  setItem: (key: string, value: string) => Promise<void>\n  removeItem: (key: string) => Promise<void>\n}\n\ninterface CreateAsyncStoragePersisterOptions {\n  /** The storage client used for setting an retrieving items from cache */\n  storage: AsyncStorage\n  /** The key to use when storing the cache */\n  key?: string\n  /** To avoid spamming,\n   * pass a time in ms to throttle saving the cache to disk */\n  throttleTime?: number\n  /**\n   * How to serialize the data to storage.\n   * @default `JSON.stringify`\n   */\n  serialize?: (client: PersistedClient) => string\n  /**\n   * How to deserialize the data from storage.\n   * @default `JSON.parse`\n   */\n  deserialize?: (cachedString: string) => PersistedClient\n}\n\nexport const createAsyncStoragePersister = ({\n  storage,\n  key = `REACT_QUERY_OFFLINE_CACHE`,\n  throttleTime = 1000,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n}: CreateAsyncStoragePersisterOptions): Persister => {\n  return {\n    persistClient: asyncThrottle(\n      persistedClient => storage.setItem(key, serialize(persistedClient)),\n      { interval: throttleTime }\n    ),\n    restoreClient: async () => {\n      const cacheString = await storage.getItem(key)\n\n      if (!cacheString) {\n        return\n      }\n\n      return deserialize(cacheString) as PersistedClient\n    },\n    removeClient: () => storage.removeItem(key),\n  }\n}\n"],"names":["noop","asyncThrottle","func","interval","onError","Error","running","timeout","lastTime","currentArgs","execFunc","async","args","error","Date","now","delayFunc","clearTimeout","setTimeout","tooSoon","storage","key","throttleTime","serialize","JSON","stringify","deserialize","parse","persistClient","persistedClient","setItem","restoreClient","cacheString","getItem","removeClient","removeItem"],"mappings":"6QAKA,MAAMA,EAAO,OAIN,SAASC,EACdC,GACAC,SAAEA,EAAW,IAAbC,QAAmBA,EAAUJ,GAA+B,IAExD,GAAgB,mBAATE,EAAqB,MAAM,IAAIG,MAAM,6BAE5CC,IAEAC,EAFAD,GAAU,EACVE,EAAW,EAEXC,EAA2B,KAEzBC,MAAAA,EAAWC,UACf,GAAIF,EAAa,CACTG,MAAAA,EAAOH,EACbA,EAAc,KACV,IACFH,GAAU,QACJJ,KAAQU,GACd,MAAOC,GACPT,EAAQS,GACA,QACRL,EAAWM,KAAKC,MAChBT,GAAU,KAKVU,EAAYL,UAChBM,aAAaV,GACbA,EAAUW,YAAW,KACfZ,EACFU,IAEAN,MAEDP,IAGE,MAAA,IAAIS,KACTH,EAAcG,EAERO,MAAAA,EAAUL,KAAKC,MAAQP,EAAWL,EACpCG,GAAWa,EACbH,IAEAN,mCCzBqC,EACzCU,QAAAA,EACAC,IAAAA,EAF0C,4BAG1CC,aAAAA,EAAe,IACfC,UAAAA,EAAYC,KAAKC,UACjBC,YAAAA,EAAcF,KAAKG,UAEZ,CACLC,cAAe3B,GACb4B,GAAmBT,EAAQU,QAAQT,EAAKE,EAAUM,KAClD,CAAE1B,SAAUmB,IAEdS,cAAepB,UACPqB,MAAAA,QAAoBZ,EAAQa,QAAQZ,GAEtC,GAACW,EAIEN,OAAAA,EAAYM,IAErBE,aAAc,IAAMd,EAAQe,WAAWd"}