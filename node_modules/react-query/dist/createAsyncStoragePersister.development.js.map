{"version":3,"file":"createAsyncStoragePersister.development.js","sources":["../src/createAsyncStoragePersister/asyncThrottle.ts","../src/createAsyncStoragePersister/index.ts"],"sourcesContent":["export interface AsyncThrottleOptions {\n  interval?: number\n  onError?: (error: unknown) => void\n}\n\nconst noop = () => {\n  /* do nothing */\n}\n\nexport function asyncThrottle<Args extends readonly unknown[]>(\n  func: (...args: Args) => Promise<void>,\n  { interval = 1000, onError = noop }: AsyncThrottleOptions = {}\n) {\n  if (typeof func !== 'function') throw new Error('argument is not function.')\n\n  let running = false\n  let lastTime = 0\n  let timeout: ReturnType<typeof setTimeout>\n  let currentArgs: Args | null = null\n\n  const execFunc = async () => {\n    if (currentArgs) {\n      const args = currentArgs\n      currentArgs = null\n      try {\n        running = true\n        await func(...args)\n      } catch (error) {\n        onError(error)\n      } finally {\n        lastTime = Date.now() // this line must after 'func' executed to avoid two 'func' running in concurrent.\n        running = false\n      }\n    }\n  }\n\n  const delayFunc = async () => {\n    clearTimeout(timeout)\n    timeout = setTimeout(() => {\n      if (running) {\n        delayFunc() // Will come here when 'func' execution time is greater than the interval.\n      } else {\n        execFunc()\n      }\n    }, interval)\n  }\n\n  return (...args: Args) => {\n    currentArgs = args\n\n    const tooSoon = Date.now() - lastTime < interval\n    if (running || tooSoon) {\n      delayFunc()\n    } else {\n      execFunc()\n    }\n  }\n}\n","import { PersistedClient, Persister } from '../persistQueryClient'\nimport { asyncThrottle } from './asyncThrottle'\n\ninterface AsyncStorage {\n  getItem: (key: string) => Promise<string | null>\n  setItem: (key: string, value: string) => Promise<void>\n  removeItem: (key: string) => Promise<void>\n}\n\ninterface CreateAsyncStoragePersisterOptions {\n  /** The storage client used for setting an retrieving items from cache */\n  storage: AsyncStorage\n  /** The key to use when storing the cache */\n  key?: string\n  /** To avoid spamming,\n   * pass a time in ms to throttle saving the cache to disk */\n  throttleTime?: number\n  /**\n   * How to serialize the data to storage.\n   * @default `JSON.stringify`\n   */\n  serialize?: (client: PersistedClient) => string\n  /**\n   * How to deserialize the data from storage.\n   * @default `JSON.parse`\n   */\n  deserialize?: (cachedString: string) => PersistedClient\n}\n\nexport const createAsyncStoragePersister = ({\n  storage,\n  key = `REACT_QUERY_OFFLINE_CACHE`,\n  throttleTime = 1000,\n  serialize = JSON.stringify,\n  deserialize = JSON.parse,\n}: CreateAsyncStoragePersisterOptions): Persister => {\n  return {\n    persistClient: asyncThrottle(\n      persistedClient => storage.setItem(key, serialize(persistedClient)),\n      { interval: throttleTime }\n    ),\n    restoreClient: async () => {\n      const cacheString = await storage.getItem(key)\n\n      if (!cacheString) {\n        return\n      }\n\n      return deserialize(cacheString) as PersistedClient\n    },\n    removeClient: () => storage.removeItem(key),\n  }\n}\n"],"names":["noop","asyncThrottle","func","interval","onError","Error","running","lastTime","timeout","currentArgs","execFunc","args","error","Date","now","delayFunc","clearTimeout","setTimeout","tooSoon","createAsyncStoragePersister","storage","key","throttleTime","serialize","JSON","stringify","deserialize","parse","persistClient","persistedClient","setItem","restoreClient","cacheString","getItem","removeClient","removeItem"],"mappings":"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"}