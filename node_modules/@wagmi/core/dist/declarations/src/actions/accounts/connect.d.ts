import { providers } from 'ethers';
import { Client } from '../../client';
import { Connector, ConnectorData } from '../../connectors';
export declare type ConnectArgs = {
    /** Connector to connect */
    connector: Connector;
};
declare type Data<TProvider extends providers.BaseProvider = providers.BaseProvider> = Required<ConnectorData<TProvider>>;
export declare type ConnectResult<TProvider extends providers.BaseProvider = providers.BaseProvider> = {
    account: Data<TProvider>['account'];
    chain: Data<TProvider>['chain'];
    connector: Client<TProvider>['connector'];
    provider: Data<TProvider>['provider'];
};
export declare function connect<TProvider extends providers.BaseProvider>({ connector, }: ConnectArgs): Promise<ConnectResult<TProvider>>;
export {};
