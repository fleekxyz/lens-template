export interface BrowserReadableStreamToItOptions {
    preventCancel?: boolean;
}
/**
 * Turns a browser readable stream into an async iterable. Async iteration over
 * returned iterable will lock give stream, preventing any other consumer from
 * acquiring a reader. The lock will be released if iteration loop is broken. To
 * prevent stream cancelling optional `{ preventCancel: true }` could be passed
 * as a second argument.
 */
export default function browserReadableStreamToIt<T>(stream: ReadableStream<T>, options?: BrowserReadableStreamToItOptions): AsyncGenerator<T, void, undefined>;
//# sourceMappingURL=index.d.ts.map